{"ast":null,"code":"import React from \"react\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n// import i18next from \"i18next\";\n\nconst FlipCard = item => {\n  const {\n    engTitle,\n    serTitle,\n    engContent,\n    serContent,\n    icon\n  } = item;\n  // const language = i18next.language;\n  // make cardItems array of objects to iterate over\n  // each object should have title, eng content, ser content, icon properties\n  // content and title change based on the language\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: icon\n  }, void 0, false);\n};\n_c = FlipCard;\nexport default FlipCard;\nvar _c;\n$RefreshReg$(_c, \"FlipCard\");","map":{"version":3,"names":["React","Fragment","_Fragment","jsxDEV","_jsxDEV","FlipCard","item","engTitle","serTitle","engContent","serContent","icon","children","_c","$RefreshReg$"],"sources":["/home/miki/Programming/akerman-law-firm-site/src/components/FlipCard.tsx"],"sourcesContent":["import React from \"react\";\nimport { CardItemType } from \"../content/types\";\n// import i18next from \"i18next\";\n\nconst FlipCard = (item: CardItemType) => {\n  const { engTitle, serTitle, engContent, serContent, icon } = item;\n  // const language = i18next.language;\n  // make cardItems array of objects to iterate over\n  // each object should have title, eng content, ser content, icon properties\n  // content and title change based on the language\n  return (\n    <>\n      {/* <p>{language === \"en\" ? engTitle : serTitle}</p> */}\n      {icon}\n      {/* <p>{language === \"en\" ? engContent : serContent}</p> */}\n    </>\n  );\n};\n\nexport default FlipCard;\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAAC,SAAAC,QAAA,IAAAC,SAAA;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE1B;;AAEA,MAAMC,QAAQ,GAAIC,IAAkB,IAAK;EACvC,MAAM;IAAEC,QAAQ;IAAEC,QAAQ;IAAEC,UAAU;IAAEC,UAAU;IAAEC;EAAK,CAAC,GAAGL,IAAI;EACjE;EACA;EACA;EACA;EACA,oBACEF,OAAA,CAAAF,SAAA;IAAAU,QAAA,EAEGD;EAAI,iBAEJ;AAEP,CAAC;AAACE,EAAA,GAbIR,QAAQ;AAed,eAAeA,QAAQ;AAAC,IAAAQ,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}